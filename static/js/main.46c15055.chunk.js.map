{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","services/getMovieByTitle.ts","utils/getIMDBUrlById.ts","constants.ts","components/FindMovie/FindMovie.tsx","types/ReponseError.ts","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","getMovieByTitle","fetch","then","response","json","getIMDBUrlById","id","FindMovie","setMovies","_useState","useState","_useState2","_slicedToArray","query","setQuery","_useState3","_useState4","isSearching","setIsSearching","_useState5","_useState6","setMovie","_useState7","_useState8","errorMessage","setErrorMessage","useEffect","preparedTitle","trim","Response","imdbID","Title","Plot","Poster","preparedMovie","catch","_Fragment","onSubmit","e","preventDefault","htmlFor","type","placeholder","concat","value","onChange","event","target","disabled","onClick","prevMovies","hasThisMovie","some","currMovie","_toConsumableArray","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.46c15055.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from '../types/MovieData';\nimport { ResponseError } from '../types/ReponseError';\n\nconst BASE_URL = 'https://www.omdbapi.com/?apikey=f23808d&t=';\n\nfunction getMovieByTitle(title: string) {\n  return fetch(BASE_URL + title)\n    .then(response => {\n      return response.json() as Promise<MovieData | ResponseError>;\n    });\n}\n\nexport default getMovieByTitle;\n","function getIMDBUrlById(id: string) {\n  const BASE_URL = 'https://www.imdb.com/title/';\n\n  return BASE_URL + id;\n}\n\nexport default getIMDBUrlById;\n","// eslint-disable-next-line\nexport const DEFAULT_IMAGE = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n","import React, { useEffect, useState } from 'react';\nimport './FindMovie.scss';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport getMovieByTitle from '../../services/getMovieByTitle';\nimport getIMDBUrlById from '../../utils/getIMDBUrlById';\nimport { isResponseError } from '../../types/ReponseError';\nimport { DEFAULT_IMAGE } from '../../constants';\n\ninterface Props {\n  setMovies: React.Dispatch<React.SetStateAction<Movie[]>>,\n}\n\nexport const FindMovie: React.FC<Props> = ({\n  setMovies,\n}) => {\n  const [query, setQuery] = useState('');\n  const [isSearching, setIsSearching] = useState(false);\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  useEffect(() => {\n    if (isSearching) {\n      const preparedTitle = query.trim();\n\n      getMovieByTitle(preparedTitle)\n        .then(response => {\n          if (isResponseError(response)) {\n            setErrorMessage('Can\\'t find a movie with such a title');\n          } else {\n            const {\n              imdbID, Title, Plot, Poster,\n            } = response;\n\n            const preparedMovie: Movie = {\n              imdbId: imdbID,\n              title: Title,\n              description: Plot,\n              imgUrl: (Poster !== 'N/A' ? Poster : DEFAULT_IMAGE),\n              imdbUrl: getIMDBUrlById(imdbID),\n            };\n\n            setMovie(preparedMovie);\n          }\n\n          setIsSearching(false);\n        })\n        .catch(() => {\n          setIsSearching(false);\n          setErrorMessage('Fix your internet');\n        });\n    }\n  }, [isSearching]);\n\n  const addMovieToList = () => {\n    if (movie) {\n      setMovies(prevMovies => {\n        const hasThisMovie = prevMovies.some(\n          currMovie => currMovie.imdbId === movie.imdbId,\n        );\n\n        setQuery('');\n        setMovie(null);\n\n        if (hasThisMovie) {\n          setErrorMessage('This movie is already listed');\n\n          return prevMovies;\n        }\n\n        setErrorMessage('');\n\n        return [...prevMovies, movie];\n      });\n    }\n  };\n\n  const tryFindMovie = () => {\n    setIsSearching(true);\n  };\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const currentQuery = event.target.value;\n\n    if (!currentQuery.trim()) {\n      setErrorMessage('Enter the name of the movie');\n    } else {\n      setErrorMessage('');\n    }\n\n    setQuery(event.target.value);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={(e) => e.preventDefault()}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={`input ${errorMessage && 'is-danger'}`}\n              value={query}\n              onChange={handleQueryChange}\n            />\n          </div>\n\n          {errorMessage && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              {errorMessage}\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={`button is-light ${isSearching && 'is-loading'}`}\n              disabled={isSearching || query.trim() === ''}\n              onClick={tryFindMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                disabled={isSearching}\n                onClick={addMovieToList}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './MovieData';\n\nexport interface ResponseError {\n  Response: 'False',\n  Error: string,\n}\n\nexport function isResponseError(\n  data: MovieData | ResponseError,\n): data is ResponseError {\n  return (data as ResponseError).Response === 'False';\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie setMovies={setMovies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}